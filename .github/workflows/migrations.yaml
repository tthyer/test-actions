name: Data Migration

on: push
  # push:
  #   paths:
  #     - 'data/migrations/**'
  #     - '.github/workflows/migrations.yaml'

defaults:
  run:
    shell: bash
    working-directory: 'data/migrations'

jobs:

  test-migrate:

    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: db
          POSTGRES_USER: user
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:

      - name: Check out repository code
        uses: actions/checkout@v3

      # - uses: joshuaavalon/flyway-action@v3.0.0
      #   with:
      #     url: jdbc:postgresql://postgres:5432/db
      #     user: user
      #     password: postgres
      #     locations: filesystem:.data/migrations/sql/first

      - name: Connect to PostgreSQL
        run: echo foo
        # Environment variables used by the `client.js` script to create a new PostgreSQL table.
        env:
          # The hostname used to communicate with the PostgreSQL service container
          POSTGRES_HOST: postgres
          # The default PostgreSQL port
          POSTGRES_PORT: 5432

       # - name: Flyway Info
       #  run: >-
       #    docker run --rm
       #    --volume ${{ github.workspace }}/migrations:/flyway/sql:ro
       #    "${{ env.DOCKER_IMAGE }}"
       #    -licenseKey="${{ secrets.FLYWAY_LICENSE_KEY }}"
       #    -url="${{ secrets.DB_BUILD_URL }}"
       #    -user="${{ secrets.DB_BUILD_USERNAME }}"
       #    -password="${{ secrets.DB_BUILD_PASSWORD }}" 
       #    info -schemas="${{ env.SCHEMAS }}"


  migrate:

    runs-on: ubuntu-latest
    needs: test-migrate
    if: false

    strategy:

      matrix:

        job-environment:
          - dev
          - prod

        include:

          - job-environment: dev
            environment-secret-name: DEV_ENV

          - job-environment: prod
            environment-secret-name: PROD_ENV

    environment: ${{ matrix.job-environment }}


    steps:

      - uses: actions/checkout@v3
        id: checkout

      - run: |
          echo "${{ secrets[matrix.environment-secret-name] }}" > .env
          wc -l .env


    # - uses: dorny/paths-filter@v2
    #   id: filter
    #   with:
    #     filters: |
    #       metrics:
    #         - 'data/migrations/sql/schemas/metrics/**'

    # - name: Metrics Changed
    #   if: ${{ steps.filter.outputs.metrics == 'true' }}
    #   run: |
    #     echo "metrics directory changed? TRUE"

    # - name: Metrics Did Not Change
    #   if: ${{ steps.filter.outputs.metrics == 'false' }}
    #   run: |
    #     echo "metrics directory changed? FALSE"
